[
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_get_log_statistics",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_initialization",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_access",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_export",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_field_access",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_policy_violation",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_query",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_log_rotation",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_search_logs",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_sensitive_field_handling",
  "tests/data_privacy_officer/access_logging/test_logger.py::TestAccessLogger::test_verify_log_integrity",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymization_method_enum",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dataframe",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_dict",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_list_of_dicts",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_anonymize_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_auto_anonymize_dataframe",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_generalize_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_get_field_type",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_guess_anonymization_method",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_hash_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_initialization",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_mask_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_perturb_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_pseudonymize_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_redact_value",
  "tests/data_privacy_officer/anonymization/test_anonymizer.py::TestDataAnonymizer::test_tokenize_value",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_field_category",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_add_purpose_category",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dataframe",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_dict",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_apply_to_list_of_dicts",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_data_category_enum",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_allowed_fields",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_get_field_category",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_initialization",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_purpose_enum",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_set_purpose_categories",
  "tests/data_privacy_officer/data_minimization/test_minimizer.py::TestDataMinimizer::test_with_pii_detector",
  "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_compliance_audit",
  "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_protection_impact_assessment",
  "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_data_subject_access_request",
  "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_investigation",
  "tests/data_privacy_officer/integration/test_scenarios.py::TestUserScenarios::test_scenario_privacy_compliance_report",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_custom_patterns",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dataframe",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_dict",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_series",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_detect_in_string",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_field_context_scores",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_all_patterns",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_get_pattern_info",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_initialization",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_is_pii_field",
  "tests/data_privacy_officer/pii_detection/test_detector.py::TestPIIDetector::test_luhn_check",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_error_handling",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_generate_summary_report",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_initialization",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_parallel_execution",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_csv_file",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_dataframe",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_csv_files",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_multiple_dataframes",
  "tests/data_privacy_officer/pii_detection/test_scanner.py::TestPIIScanner::test_scan_nonexistent_csv_file",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_field_category",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_add_policy",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_categorize_fields",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_combination",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_data_source_access",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_field_access",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_enforce_query",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_initialization",
  "tests/data_privacy_officer/policy_enforcement/test_enforcer.py::TestPolicyEnforcer::test_load_policies",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_creation",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_from_dict",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_data_policy_to_dict",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_category_enum",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_field_combination_validation",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_action_enum",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_add_remove",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_creation",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_from_dict",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_get_by_type",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_set_to_dict",
  "tests/data_privacy_officer/policy_enforcement/test_policy.py::TestPolicyDefinitions::test_policy_type_enum",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_add_remove_data_source",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_error_handling",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_anonymization",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_join",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_minimization",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_policy_enforcement",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_query_with_privacy_functions",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_execute_simple_query",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_get_query_history",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_initialization",
  "tests/data_privacy_officer/query_engine/test_engine.py::TestPrivacyQueryEngine::test_query_with_logging",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_extract_table_relationships",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_has_privacy_functions",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_initialization",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_different_join_types",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_join",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_privacy_functions",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_subqueries",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_query_with_various_clauses",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_select_star",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_parse_simple_query",
  "tests/data_privacy_officer/query_engine/test_parser.py::TestQueryParser::test_privacy_function_enum",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyze_communication",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_analyzer_initialization",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_email_address",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_extract_messages_from_collection",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_communications",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_find_key_participants",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_email_document",
  "tests/legal_discovery_specialist/test_communication_analysis/test_analyzer.py::test_parse_participant_string",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_graph",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_communication_participant",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_recipients",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_get_sender",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_message_thread",
  "tests/legal_discovery_specialist/test_communication_analysis/test_models.py::test_participant_info",
  "tests/legal_discovery_specialist/test_core/test_document.py::test_document_collection",
  "tests/legal_discovery_specialist/test_core/test_document.py::test_document_creation",
  "tests/legal_discovery_specialist/test_core/test_document.py::test_document_get_content_preview",
  "tests/legal_discovery_specialist/test_core/test_document.py::test_document_metadata_creation",
  "tests/legal_discovery_specialist/test_core/test_document.py::test_email_document_creation",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_composite",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_full_text",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_metadata",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_execute_query_string",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_parse_query",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_execution_context",
  "tests/legal_discovery_specialist/test_core/test_interpreter.py::test_query_interpreter_initialization",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_communication_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_composite_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_distance_units",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_full_text_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_legal_discovery_query_to_sql_like",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_metadata_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_privilege_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_proximity_query",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_query_operators",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_query_result",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_query_types",
  "tests/legal_discovery_specialist/test_core/test_query.py::test_temporal_query",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_proximity",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_calculate_similarity",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_classify_content",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_document_analyzer_initialization",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_extract_metadata",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_find_similar_documents",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_collection",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_index_document",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search",
  "tests/legal_discovery_specialist/test_document_analysis/test_analyzer.py::test_search_proximity",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_basic",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_proximity_legal_terms",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_calculate_word_positions",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_find_proximity_matches",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_highlight_proximity_matches",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_positions_to_unit",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_tokenize_document",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance",
  "tests/legal_discovery_specialist/test_document_analysis/test_proximity.py::test_within_distance_ordered",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_communication_search",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_composite_search",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_full_text_search",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_privilege_search",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_proximity_search",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_query_string_execution",
  "tests/legal_discovery_specialist/test_integration/test_integration.py::test_temporal_search",
  "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_ontology",
  "tests/legal_discovery_specialist/test_ontology/test_models.py::test_legal_term",
  "tests/legal_discovery_specialist/test_ontology/test_models.py::test_ontology_collection",
  "tests/legal_discovery_specialist/test_ontology/test_models.py::test_term_relation",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_create_simple_ontology",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_query",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_expand_terms",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_get_related_documents",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_load_ontology_from_file",
  "tests/legal_discovery_specialist/test_ontology/test_service.py::test_ontology_service_initialization",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_attorney",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_add_privilege_indicator",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_calculate_privilege_score",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_attorneys",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_in_collection",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detect_privilege_indicators",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_detector_initialization",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_determine_privilege_status",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_generate_privilege_log",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_is_attorney",
  "tests/legal_discovery_specialist/test_privilege/test_detector.py::test_load_attorneys_from_file",
  "tests/legal_discovery_specialist/test_privilege/test_models.py::test_attorney",
  "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_detection_result",
  "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_indicator",
  "tests/legal_discovery_specialist/test_privilege/test_models.py::test_privilege_log",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_custom_timeframe",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_create_timeline",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_date",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_filter_documents_by_timeframe",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_load_timeframes_from_file",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_date",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_normalize_dates_in_document",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_resolve_timeframe",
  "tests/legal_discovery_specialist/test_temporal/test_manager.py::test_temporal_manager_initialization",
  "tests/legal_discovery_specialist/test_temporal/test_models.py::test_date_normalization_format",
  "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe",
  "tests/legal_discovery_specialist/test_temporal/test_models.py::test_legal_timeframe_calculate_dates",
  "tests/legal_discovery_specialist/test_temporal/test_models.py::test_time_period",
  "tests/legal_discovery_specialist/test_temporal/test_models.py::test_timeframe_catalog"
]