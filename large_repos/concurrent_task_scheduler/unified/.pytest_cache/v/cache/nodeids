[
  "tests/render_farm_manager/integration/test_audit_logging.py::test_audit_log_levels",
  "tests/render_farm_manager/integration/test_audit_logging.py::test_audit_logging_completeness",
  "tests/render_farm_manager/integration/test_audit_logging.py::test_performance_metrics_tracking",
  "tests/render_farm_manager/integration/test_circular_dependency_patch.py::test_circular_dependency_detection_patched",
  "tests/render_farm_manager/integration/test_energy_modes.py::test_dynamic_energy_mode_switching",
  "tests/render_farm_manager/integration/test_energy_modes.py::test_night_savings_energy_mode",
  "tests/render_farm_manager/integration/test_energy_modes_fixed.py::test_energy_mode_changes",
  "tests/render_farm_manager/integration/test_error_recovery.py::test_error_count_threshold",
  "tests/render_farm_manager/integration/test_error_recovery.py::test_error_recovery_checkpoint_resume",
  "tests/render_farm_manager/integration/test_error_recovery.py::test_multiple_failures_with_checkpoints",
  "tests/render_farm_manager/integration/test_error_recovery_fixed.py::test_error_recovery_checkpoint_simple",
  "tests/render_farm_manager/integration/test_error_recovery_fixed_complete.py::test_error_count_threshold_handling",
  "tests/render_farm_manager/integration/test_error_recovery_fixed_complete.py::test_error_recovery_with_checkpoint",
  "tests/render_farm_manager/integration/test_error_recovery_fixed_full.py::test_error_count_threshold",
  "tests/render_farm_manager/integration/test_error_recovery_fixed_full.py::test_error_recovery_checkpoint_resume",
  "tests/render_farm_manager/integration/test_error_recovery_fixed_full.py::test_multiple_failures_with_checkpoints",
  "tests/render_farm_manager/integration/test_fault_tolerance.py::test_fault_tolerance_multiple_node_failures",
  "tests/render_farm_manager/integration/test_fault_tolerance_fixed.py::test_fault_tolerance_multiple_node_failures",
  "tests/render_farm_manager/integration/test_job_dependencies.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies.py::test_dependent_job_priority_inheritance",
  "tests/render_farm_manager/integration/test_job_dependencies.py::test_job_dependency_scheduling",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed.py::test_simple_dependency",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_direct.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_direct.py::test_dependent_job_priority_inheritance",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_direct.py::test_job_dependency_scheduling",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_direct_complete.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_direct_complete.py::test_simple_dependency",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_full.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_full.py::test_dependent_job_priority_inheritance",
  "tests/render_farm_manager/integration/test_job_dependencies_fixed_full.py::test_job_dependency_scheduling",
  "tests/render_farm_manager/integration/test_job_dependencies_scheduling_patch.py::test_job_dependency_scheduling_patched",
  "tests/render_farm_manager/integration/test_job_dependencies_simple.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_simple.py::test_simple_dependency",
  "tests/render_farm_manager/integration/test_job_dependencies_simple_fixed.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_simple_fixed.py::test_simple_dependency",
  "tests/render_farm_manager/integration/test_job_dependencies_simple_patched.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_simple_patched.py::test_simple_dependency",
  "tests/render_farm_manager/integration/test_job_dependencies_with_monkey_patch.py::test_simple_dependency_with_monkey_patch",
  "tests/render_farm_manager/integration/test_job_dependencies_with_monkey_patch_all.py::test_circular_dependency_detection",
  "tests/render_farm_manager/integration/test_job_dependencies_with_monkey_patch_all.py::test_dependent_job_priority_inheritance",
  "tests/render_farm_manager/integration/test_job_dependencies_with_monkey_patch_all.py::test_job_dependency_scheduling",
  "tests/render_farm_manager/integration/test_priority_inheritance_patch.py::TestPriorityInheritance::test_dependent_job_priority_inheritance_patched",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_add_client",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_add_node",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_cancel_job",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_client_resource_guarantees",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_energy_optimization",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_farm_manager_initialization",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_full_end_to_end_workflow",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_job_progress_update",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_node_failure",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_progressive_output_config",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_scheduling_cycle",
  "tests/render_farm_manager/integration/test_render_farm_manager.py::test_submit_job",
  "tests/render_farm_manager/performance/test_performance.py::test_multiple_scheduling_cycles",
  "tests/render_farm_manager/performance/test_performance.py::test_node_specialization_efficiency",
  "tests/render_farm_manager/performance/test_performance.py::test_scheduling_performance",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_can_meet_deadline",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_preemption",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_preemption_disabled",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_rescheduling_failed_job",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_schedule_jobs_priority_order",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_schedule_jobs_resource_requirements",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_schedule_with_dependencies",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_scheduler_initialization",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_should_preempt",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_update_priorities_deadline_approaching",
  "tests/render_farm_manager/unit/test_deadline_scheduler.py::test_update_priorities_job_progress",
  "tests/render_farm_manager/unit/test_deadline_scheduler_fixed.py::test_schedule_with_dependencies_fixed",
  "tests/render_farm_manager/unit/test_deadline_scheduler_full.py::test_schedule_with_dependencies_fixed",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_calculate_energy_cost",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_energy_mode_affects_scheduling",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_energy_mode_update_based_on_time",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_energy_optimizer_initialization",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_estimate_energy_savings",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_get_node_type",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_high_priority_jobs_override_energy_considerations",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_node_meets_requirements",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_optimize_energy_usage",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_set_energy_mode",
  "tests/render_farm_manager/unit/test_energy_optimizer.py::test_time_of_day_energy_price",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_analyze_node_efficiency",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_calculate_performance_score",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_match_job_to_node_cpu_job",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_match_job_to_node_gpu_job",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_match_job_to_node_memory_job",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_no_suitable_node",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_node_capability_matching",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_performance_history_influence",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_specialization_manager_initialization",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_specialized_vs_general_nodes",
  "tests/render_farm_manager/unit/test_node_specialization.py::test_update_performance_history",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_estimate_overhead",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_generate_progressive_output",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_generate_progressive_output_unsupported_job",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_get_latest_progressive_output",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_max_overhead_limit",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_process_pending_outputs",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_progressive_renderer_initialization",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_quality_overhead_factors",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_schedule_progressive_output_disabled_config",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_schedule_progressive_output_long_job",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_schedule_progressive_output_short_job",
  "tests/render_farm_manager/unit/test_progressive_renderer.py::test_schedule_progressive_output_unsupported_job",
  "tests/render_farm_manager/unit/test_resource_borrowing.py::test_borrowing_limit_variations",
  "tests/render_farm_manager/unit/test_resource_borrowing.py::test_client_resource_borrowing",
  "tests/render_farm_manager/unit/test_resource_borrowing_fixed.py::test_borrowing_limit_variations",
  "tests/render_farm_manager/unit/test_resource_borrowing_fixed.py::test_client_resource_borrowing",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_allocate_resources_borrowing",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_allocate_resources_guaranteed_minimums",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_allocate_resources_with_no_clients",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_allocate_resources_with_no_nodes",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_allocate_resources_with_offline_nodes",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_calculate_resource_usage",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_can_borrow_resources",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_partitioner_initialization",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_resource_allocation_scaling",
  "tests/render_farm_manager/unit/test_resource_partitioner.py::test_resource_allocation_special_hardware",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_add_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_add_dependency_with_cycle",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_add_stage",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_are_all_dependencies_satisfied",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_get_critical_path",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_get_dependencies",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_get_ready_stages",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_get_root_and_leaf_stages",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_is_stage_blocked",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_remove_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_serialize_deserialize",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_update_stage_status",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyGraph::test_validate",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_add_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_add_dynamic_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_add_transition_rule",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_bypass_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_create_dependency_graph",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_get_blocking_stages",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_get_critical_path",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_get_execution_plan",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_get_ready_stages",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_is_stage_ready",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_remove_dependency",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_update_stage_status",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestDependencyTracker::test_validate_simulation",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_create_instance",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_create_linear_workflow",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_create_parallel_workflow",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_get_next_stages",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_get_workflow_status",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_register_template",
  "tests/scientific_computing/dependency_tracking/test_dependency_tracker.py::TestWorkflowManager::test_update_instance",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_checkpoint_coordinator",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_checkpoint_manager_init",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_create_checkpoint",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_create_manager_for_simulation",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_get_all_checkpoints",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_get_default_policy",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_get_latest_checkpoint",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_register_policy",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_restore_from_checkpoint",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_should_create_checkpoint",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_update_policy",
  "tests/scientific_computing/failure_resilience/test_checkpoint_manager.py::test_validate_checkpoint",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_cancel_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_check_node_health",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_check_simulation_health",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_complete_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_detect_node_failures",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_detect_simulation_failures",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_failure_detector_init",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_failure_type_determination",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_get_active_failures",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_get_active_recoveries",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_get_recovery_strategy",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_initiate_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_process_failures",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_record_heartbeat",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_recovery_manager_init",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_reliability_metrics",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_report_failure",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_resolve_failure",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_update_simulation_progress",
  "tests/scientific_computing/failure_resilience/test_failure_detector.py::test_update_simulation_status",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_check_node_health",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_check_simulation_health",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_detect_node_failures",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_detect_simulation_failures",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_get_active_failures",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_get_node_reliability_score",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_record_heartbeat",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_report_failure",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_resolve_failure",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureDetector::test_update_simulation_progress",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureRecoveryManager::test_cancel_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureRecoveryManager::test_complete_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureRecoveryManager::test_get_recovery_strategy",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureRecoveryManager::test_initiate_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestFailureRecoveryManager::test_process_failures",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_complete_recovery",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_detect_and_handle_failures",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_handle_failure_detection",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_handle_node_status_change",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_handle_simulation_status_change",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_handle_stage_status_change",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_record_event",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_schedule_checkpoint",
  "tests/scientific_computing/failure_resilience/test_failure_resilience.py::TestResilienceCoordinator::test_set_resilience_level",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_complete_recovery",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_detect_and_handle_failures",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_get_active_recoveries",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_get_checkpoint_schedule",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_get_resilience_metrics",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_handle_failure_detection",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_handle_node_status_change",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_handle_simulation_status_change",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_handle_stage_status_change",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_process_checkpoints",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_process_scheduled_checkpoints",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_record_event",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_resilience_coordinator_init",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_schedule_checkpoint",
  "tests/scientific_computing/failure_resilience/test_resilience_coordinator.py::test_set_resilience_level",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestJobScheduler::test_activate_reservation",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestJobScheduler::test_active_reservations",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestJobScheduler::test_maintenance_windows",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestJobScheduler::test_preemption_history",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestJobScheduler::test_reserve_resources",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_checkpoint_creation",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_dynamic_priority_adjustment",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_handle_node_failure",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_long_term_reservation",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_maintenance_handling",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_node_allocation_optimization",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_pause_and_resume_simulation",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_preemption_policies",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_preemption_protection",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_processing_queue",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_recovery_from_failure",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_simulation_stage_transitions",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_submit_simulation",
  "tests/scientific_computing/job_management/test_long_running_job_manager.py::TestLongRunningJobManager::test_submit_with_max_concurrent_limit",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_aggregate_data_points",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_collect_batch_data",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_collect_node_data",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_collect_simulation_data",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_get_resource_history",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_record_data_point",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_resource_data_collector_init",
  "tests/scientific_computing/resource_forecasting/test_data_collector.py::test_resource_usage_analyzer",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_create_resource_projection",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_detect_anomalies",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_extract_time_features",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_forecast_resource_usage",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_forecaster_init",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_train_model",
  "tests/scientific_computing/resource_forecasting/test_forecaster.py::test_update_forecast_with_actuals",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_capacity_planning_recommendation",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_generate_capacity_plan",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_justification_generation",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_mock_allocation_and_capacity",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_optimize_simulation_resources",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_optimizer_init",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_resource_allocation_recommendation",
  "tests/scientific_computing/resource_forecasting/test_optimizer.py::test_resource_cost",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_generate_forecast_report",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_generate_grant_report",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_generate_recommendation_report",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_generate_utilization_report",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_get_report",
  "tests/scientific_computing/resource_forecasting/test_reporter.py::test_reporter_init",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestDynamicPriorityEvents::test_queue_for_recalculation",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestDynamicPriorityEvents::test_recompute_all_priorities",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestDynamicPriorityEvents::test_sudden_priority_change",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestEdgeCasePriorityManagement::test_empty_resource_allocation",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestEdgeCasePriorityManagement::test_paused_scenario_handling",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestEdgeCasePriorityManagement::test_unusual_resource_types",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestEdgeCasePriorityManagement::test_very_high_priority_scenario",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestErrorHandling::test_empty_scenario_list",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestErrorHandling::test_invalid_priority_override",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestErrorHandling::test_single_scenario",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestPriorityTrendAnalysis::test_priority_trend_tracking",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationHistory::test_resource_allocation_tracking",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationStrategies::test_reallocation_strategy[ResourceReallocationStrategy.AGGRESSIVE]",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationStrategies::test_reallocation_strategy[ResourceReallocationStrategy.BALANCED]",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationStrategies::test_reallocation_strategy[ResourceReallocationStrategy.GRADUAL]",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationStrategies::test_reallocation_strategy[ResourceReallocationStrategy.PROPORTIONAL]",
  "tests/scientific_computing/scenario_management/test_advanced_priority_management.py::TestResourceAllocationStrategies::test_reallocation_strategy[ResourceReallocationStrategy.THRESHOLD_BASED]",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_compare_multiple_scenarios",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_compare_scenarios_direct",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_compare_scenarios_rank_based",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_compare_scenarios_relative",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_compare_scenarios_weighted",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_get_comparison_history",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_group_scenarios_by_similarity",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_identify_complementary_scenarios",
  "tests/scientific_computing/scenario_management/test_comparator.py::TestScenarioComparator::test_initialization",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_compare_evaluations",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_evaluate_empty_scenario",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_evaluate_scenario",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_evaluation_criteria_functions",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_evaluation_history_tracking",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_evaluation_with_custom_weights",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_initialization",
  "tests/scientific_computing/scenario_management/test_evaluator.py::TestScenarioEvaluator::test_manual_rating_integration",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_compare_and_adjust_priorities",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_evaluate_scenario_priority",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_get_priority_changes",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_get_priority_trend",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_get_resource_allocation_history",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_initialization",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_manual_priority_override",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_needs_evaluation",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_reallocate_resources",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_recompute_all_priorities",
  "tests/scientific_computing/scenario_management/test_priority_manager.py::TestPriorityManager::test_update_scenario_priority",
  "tests/scientific_computing/scenario_management/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_end_to_end_workflow",
  "tests/scientific_computing/scenario_management/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_manual_override_integration",
  "tests/scientific_computing/scenario_management/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_priority_manager_adaptation",
  "tests/scientific_computing/scenario_management/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_scenario_metric_updates_propagation",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestComparisonResult::test_clear_winner",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestComparisonResult::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestResearchObjective::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestResearchObjective::test_is_relevant_to_scenario",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestResourceAllocation::test_get_absolute_allocation",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestResourceAllocation::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestResourceAllocation::test_is_valid",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_calculate_priority_score",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_get_derived_priority",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_get_simulation_status_counts",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_total_progress",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenario::test_update_priority",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenarioEvaluationResult::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScenarioEvaluationResult::test_should_adjust_priority",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScientificMetric::test_initialization",
  "tests/scientific_computing/scenario_management/test_scenario_model.py::TestScientificMetric::test_normalized_score",
  "tests/scientific_computing/test_full_system_integration.py::TestEndToEndWorkflow::test_multi_scenario_prioritization",
  "tests/scientific_computing/test_full_system_integration.py::TestEndToEndWorkflow::test_scenario_lifecycle",
  "tests/scientific_computing/test_full_system_integration.py::TestFailureResilienceWithForecasting::test_forecasting_affects_checkpoint_frequency",
  "tests/scientific_computing/test_full_system_integration.py::TestResourceOptimizationWithPriorities::test_priority_affects_resource_allocation",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_compare_and_adjust_priorities",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_force_update_ignores_threshold",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_get_priority_changes",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_get_priority_trend",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_get_resource_allocation_history",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_initialization",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_manual_priority_override",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_needs_evaluation",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_reallocate_resources",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_reallocation_strategy_threshold_based",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_recompute_all_priorities",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_small_priority_change_below_threshold",
  "tests/scientific_computing/test_priority_manager.py::TestPriorityManager::test_update_scenario_priority",
  "tests/scientific_computing/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_complementary_scenario_detection",
  "tests/scientific_computing/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_end_to_end_priority_workflow",
  "tests/scientific_computing/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_manual_override_integration",
  "tests/scientific_computing/test_scenario_management_integration.py::TestScenarioManagementIntegration::test_priority_adaptation_to_metric_changes"
]